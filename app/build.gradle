apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.thp.mvp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                // EventBus Apt 索引类生成位置
                arguments = [ eventBusIndex : applicationId + '.MyEventBusIndex' ]
            }
        }
    }
    //APK 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
//    signingConfigs {
//        release {
//            keyAlias '密钥别称'
//            keyPassword '密钥密码'
//            storeFile file('E:/MySign.jks')
//            storePassword '密钥库密码'
//        }
//
//        debug {
//            keyAlias '密钥别称'
//            keyPassword '密钥密码'
//            storeFile file('E:/MySign.jks')
//            storePassword '密钥库密码'
//        }
//    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 移除无用的resource文件，前提minifyEnabled必须打开
            shrinkResources true
            // ZipAlign优化
            zipAlignEnabled true
            // 设置混淆
            minifyEnabled true
            // 正式环境签名
            //signingConfig signingConfigs.release
        }

        debug {
            // ZipAlign优化
            zipAlignEnabled false
            // 设置混淆
            minifyEnabled false
            // 开发环境签名
            //signingConfig signingConfigs.debug
        }
    }

    // JNI 目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    // 执行配置
    applicationVariants.all { variant ->

        // Apk 输出配置
        variant.outputs.all { output ->
            def appName = "AndroidProject"
//            if (variant.buildType.name == 'debug') {
                outputFileName = appName + '_v' + versionName + '_' + variant.buildType.name + '.apk'

        }

    }
}

dependencies {

    // 依赖 libs 目录下所有 jar 包
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // 依赖 libs 目录下所有 aar 包
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    implementation project(':dialog')
    implementation project(':widget')
    implementation project(':commonLib')

    // Dex分包，解决 64k 问题
    implementation 'com.android.support:multidex:1.0.3'

    //高仿微信底部状态栏的轻量级库 https://github.com/yingLanNull/AlphaTabsIndicator
    implementation 'com.yinglan.alphatabs:library:1.0.8'

    // ButterKnife 注解库：https://github.com/JakeWharton/butterknife
    implementation 'com.jakewharton:butterknife:9.0.0-rc1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc1'

    // EventBus 事件总线
    implementation 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'

    // 状态栏沉浸：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:2.3.3'

    // 吐司工具类：https://github.com/getActivity/ToastUtils
    implementation 'com.hjq:toast:6.0'

    // 标题栏：https://github.com/getActivity/TitleBar
    implementation 'com.hjq:titlebar:5.0'

    // 圆形的ImageView：https://github.com/hdodenhof/CircleImageView
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    //https://github.com/CymChad/BaseRecyclerViewAdapterHelper 万能适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

    //https://github.com/tbruyelle/RxPermissions 请求权限
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //rxjava2 和 rxandroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //retrofit  https://github.com/square/retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.google.code.gson:gson:2.8.5'

    //Log库，让打印的Log变得非常漂亮 https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'

    //dagger https://github.com/google/dagger
    implementation 'com.google.dagger:dagger:2.22.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.22.1'
    //崩溃捕捉框架 https://github.com/Ereza/CustomActivityOnCrash
    implementation 'cat.ereza:customactivityoncrash:2.2.0'
    //安卓任意界面悬浮窗 https://github.com/yhaolpz/FloatWindow
    implementation 'com.github.yhaolpz:FloatWindow:1.0.9'
}
